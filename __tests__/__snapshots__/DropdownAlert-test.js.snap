// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders custom alert correctly 1`] = `
<AnimatedComponent
  onMoveShouldSetResponder={[Function]}
  onMoveShouldSetResponderCapture={[Function]}
  onResponderEnd={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderReject={[Function]}
  onResponderRelease={[Function]}
  onResponderStart={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  onStartShouldSetResponderCapture={[Function]}
  style={
    Object {
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
      "transform": Array [
        Object {
          "translateY": -100,
        },
      ],
    }
  }
>
  <TouchableOpacity
    activeOpacity={0.95}
    disabled={false}
    onLayout={[Function]}
    onPress={[Function]}
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "padding": 8,
            "paddingTop": 20,
          },
          Object {
            "flexDirection": "row",
            "padding": 16,
          },
        ]
      }
    >
      <Icon
        source="https://facebook.github.io/react/img/logo_og.png"
        style={
          Object {
            "alignSelf": "center",
            "height": 30,
            "padding": 8,
            "width": 30,
          }
        }
      />
      <View
        style={
          Object {
            "flex": 1,
            "padding": 8,
          }
        }
      >
        <Label
          numberOfLines={1}
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "white",
              "fontSize": 16,
              "fontWeight": "bold",
              "textAlign": "left",
            }
          }
          text="Hello"
        />
        <Label
          numberOfLines={3}
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "white",
              "fontSize": 14,
              "fontWeight": "normal",
              "textAlign": "left",
            }
          }
          text="World!"
        />
      </View>
      <Cancel
        callback={null}
        onPress={[Function]}
        source={1}
        style={
          Object {
            "alignSelf": "center",
            "height": 30,
            "padding": 8,
            "width": 30,
          }
        }
        underlayColor="transparent"
        visible={false}
      />
    </View>
  </TouchableOpacity>
</AnimatedComponent>
`;

exports[`renders custom alert with cancel correctly 1`] = `
<AnimatedComponent
  onMoveShouldSetResponder={[Function]}
  onMoveShouldSetResponderCapture={[Function]}
  onResponderEnd={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderReject={[Function]}
  onResponderRelease={[Function]}
  onResponderStart={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  onStartShouldSetResponderCapture={[Function]}
  style={
    Object {
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
      "transform": Array [
        Object {
          "translateY": -100,
        },
      ],
    }
  }
>
  <TouchableOpacity
    activeOpacity={0.95}
    disabled={false}
    onLayout={[Function]}
    onPress={null}
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "padding": 8,
            "paddingTop": 20,
          },
          Object {
            "flexDirection": "row",
            "padding": 16,
          },
        ]
      }
    >
      <Icon
        source="https://facebook.github.io/react/img/logo_og.png"
        style={
          Object {
            "alignSelf": "center",
            "height": 30,
            "padding": 8,
            "width": 30,
          }
        }
      />
      <View
        style={
          Object {
            "flex": 1,
            "padding": 8,
          }
        }
      >
        <Label
          numberOfLines={1}
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "white",
              "fontSize": 16,
              "fontWeight": "bold",
              "textAlign": "left",
            }
          }
          text="Hello"
        />
        <Label
          numberOfLines={3}
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "white",
              "fontSize": 14,
              "fontWeight": "normal",
              "textAlign": "left",
            }
          }
          text="World!"
        />
      </View>
      <Cancel
        callback={null}
        onPress={[Function]}
        source={1}
        style={
          Object {
            "alignSelf": "center",
            "height": 30,
            "padding": 8,
            "width": 30,
          }
        }
        underlayColor="transparent"
        visible={true}
      />
    </View>
  </TouchableOpacity>
</AnimatedComponent>
`;

exports[`renders error alert correctly 1`] = `
<AnimatedComponent
  onMoveShouldSetResponder={[Function]}
  onMoveShouldSetResponderCapture={[Function]}
  onResponderEnd={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderReject={[Function]}
  onResponderRelease={[Function]}
  onResponderStart={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  onStartShouldSetResponderCapture={[Function]}
  style={
    Object {
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
      "transform": Array [
        Object {
          "translateY": -100,
        },
      ],
    }
  }
>
  <TouchableOpacity
    activeOpacity={0.95}
    disabled={false}
    onLayout={[Function]}
    onPress={[Function]}
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "padding": 8,
            "paddingTop": 20,
          },
          Object {
            "backgroundColor": "#cc3232",
          },
        ]
      }
    >
      <Icon
        source={1}
        style={
          Object {
            "alignSelf": "center",
            "height": 30,
            "padding": 8,
            "width": 30,
          }
        }
      />
      <View
        style={
          Object {
            "flex": 1,
            "padding": 8,
          }
        }
      >
        <Label
          numberOfLines={1}
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "white",
              "fontSize": 16,
              "fontWeight": "bold",
              "textAlign": "left",
            }
          }
          text="Hello"
        />
        <Label
          numberOfLines={3}
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "white",
              "fontSize": 14,
              "fontWeight": "normal",
              "textAlign": "left",
            }
          }
          text="World!"
        />
      </View>
      <Cancel
        backgroundColor="#cc3232"
        callback={null}
        onPress={[Function]}
        source={1}
        style={
          Object {
            "alignSelf": "center",
            "height": 30,
            "padding": 8,
            "width": 30,
          }
        }
        underlayColor="transparent"
        visible={false}
      />
    </View>
  </TouchableOpacity>
</AnimatedComponent>
`;

exports[`renders info alert correctly 1`] = `
<AnimatedComponent
  onMoveShouldSetResponder={[Function]}
  onMoveShouldSetResponderCapture={[Function]}
  onResponderEnd={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderReject={[Function]}
  onResponderRelease={[Function]}
  onResponderStart={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  onStartShouldSetResponderCapture={[Function]}
  style={
    Object {
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
      "transform": Array [
        Object {
          "translateY": -100,
        },
      ],
    }
  }
>
  <TouchableOpacity
    activeOpacity={0.95}
    disabled={false}
    onLayout={[Function]}
    onPress={[Function]}
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "padding": 8,
            "paddingTop": 20,
          },
          Object {
            "backgroundColor": "#2B73B6",
          },
        ]
      }
    >
      <Icon
        source={1}
        style={
          Object {
            "alignSelf": "center",
            "height": 30,
            "padding": 8,
            "width": 30,
          }
        }
      />
      <View
        style={
          Object {
            "flex": 1,
            "padding": 8,
          }
        }
      >
        <Label
          numberOfLines={1}
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "white",
              "fontSize": 16,
              "fontWeight": "bold",
              "textAlign": "left",
            }
          }
          text="Hello"
        />
        <Label
          numberOfLines={3}
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "white",
              "fontSize": 14,
              "fontWeight": "normal",
              "textAlign": "left",
            }
          }
          text="World!"
        />
      </View>
      <Cancel
        backgroundColor="#2B73B6"
        callback={null}
        onPress={[Function]}
        source={1}
        style={
          Object {
            "alignSelf": "center",
            "height": 30,
            "padding": 8,
            "width": 30,
          }
        }
        underlayColor="transparent"
        visible={false}
      />
    </View>
  </TouchableOpacity>
</AnimatedComponent>
`;

exports[`renders success alert correctly 1`] = `
<AnimatedComponent
  onMoveShouldSetResponder={[Function]}
  onMoveShouldSetResponderCapture={[Function]}
  onResponderEnd={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderReject={[Function]}
  onResponderRelease={[Function]}
  onResponderStart={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  onStartShouldSetResponderCapture={[Function]}
  style={
    Object {
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
      "transform": Array [
        Object {
          "translateY": -100,
        },
      ],
    }
  }
>
  <TouchableOpacity
    activeOpacity={0.95}
    disabled={false}
    onLayout={[Function]}
    onPress={[Function]}
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "padding": 8,
            "paddingTop": 20,
          },
          Object {
            "backgroundColor": "#32A54A",
          },
        ]
      }
    >
      <Icon
        source={1}
        style={
          Object {
            "alignSelf": "center",
            "height": 30,
            "padding": 8,
            "width": 30,
          }
        }
      />
      <View
        style={
          Object {
            "flex": 1,
            "padding": 8,
          }
        }
      >
        <Label
          numberOfLines={1}
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "white",
              "fontSize": 16,
              "fontWeight": "bold",
              "textAlign": "left",
            }
          }
          text="Hello"
        />
        <Label
          numberOfLines={3}
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "white",
              "fontSize": 14,
              "fontWeight": "normal",
              "textAlign": "left",
            }
          }
          text="World!"
        />
      </View>
      <Cancel
        backgroundColor="#32A54A"
        callback={null}
        onPress={[Function]}
        source={1}
        style={
          Object {
            "alignSelf": "center",
            "height": 30,
            "padding": 8,
            "width": 30,
          }
        }
        underlayColor="transparent"
        visible={false}
      />
    </View>
  </TouchableOpacity>
</AnimatedComponent>
`;

exports[`renders warn alert correctly 1`] = `
<AnimatedComponent
  onMoveShouldSetResponder={[Function]}
  onMoveShouldSetResponderCapture={[Function]}
  onResponderEnd={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderReject={[Function]}
  onResponderRelease={[Function]}
  onResponderStart={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  onStartShouldSetResponderCapture={[Function]}
  style={
    Object {
      "left": 0,
      "position": "absolute",
      "right": 0,
      "top": 0,
      "transform": Array [
        Object {
          "translateY": -100,
        },
      ],
    }
  }
>
  <TouchableOpacity
    activeOpacity={0.95}
    disabled={false}
    onLayout={[Function]}
    onPress={[Function]}
  >
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "padding": 8,
            "paddingTop": 20,
          },
          Object {
            "backgroundColor": "#cd853f",
          },
        ]
      }
    >
      <Icon
        source={1}
        style={
          Object {
            "alignSelf": "center",
            "height": 30,
            "padding": 8,
            "width": 30,
          }
        }
      />
      <View
        style={
          Object {
            "flex": 1,
            "padding": 8,
          }
        }
      >
        <Label
          numberOfLines={1}
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "white",
              "fontSize": 16,
              "fontWeight": "bold",
              "textAlign": "left",
            }
          }
          text="Hello"
        />
        <Label
          numberOfLines={3}
          style={
            Object {
              "backgroundColor": "transparent",
              "color": "white",
              "fontSize": 14,
              "fontWeight": "normal",
              "textAlign": "left",
            }
          }
          text="World!"
        />
      </View>
      <Cancel
        backgroundColor="#cd853f"
        callback={null}
        onPress={[Function]}
        source={1}
        style={
          Object {
            "alignSelf": "center",
            "height": 30,
            "padding": 8,
            "width": 30,
          }
        }
        underlayColor="transparent"
        visible={false}
      />
    </View>
  </TouchableOpacity>
</AnimatedComponent>
`;
